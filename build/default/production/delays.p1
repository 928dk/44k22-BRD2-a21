Version 3.2 HI-TECH Software Intermediate Code
[; ;stdio.h: 8: typedef int ptrdiff_t;
[; ;stdio.h: 9: typedef unsigned size_t;
[; ;stdio.h: 10: typedef unsigned short wchar_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 23: extern int errno;
[; ;stdio.h: 54: struct __prbuf
[; ;stdio.h: 55: {
[; ;stdio.h: 56: char * ptr;
[; ;stdio.h: 57: void (* func)(char);
[; ;stdio.h: 58: };
[; ;conio.h: 17: extern int errno;
[; ;conio.h: 20: extern void init_uart(void);
[; ;conio.h: 22: extern char getch(void);
[; ;conio.h: 23: extern char getche(void);
[; ;conio.h: 24: extern void putch(char);
[; ;conio.h: 25: extern void ungetch(char);
[; ;conio.h: 27: extern __bit kbhit(void);
[; ;conio.h: 31: extern char * cgets(char *);
[; ;conio.h: 32: extern void cputs(const char *);
[; ;stdio.h: 99: extern int cprintf(char *, ...);
[; ;stdio.h: 104: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 194: extern char * gets(char *);
[; ;stdio.h: 195: extern int puts(const char *);
[; ;stdio.h: 196: extern int scanf(const char *, ...);
[; ;stdio.h: 197: extern int sscanf(const char *, const char *, ...);
[; ;stdio.h: 198: extern int vprintf(const char *, va_list);
[; ;stdio.h: 199: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 200: extern int vscanf(const char *, va_list ap);
[; ;stdio.h: 201: extern int vsscanf(const char *, const char *, va_list);
[; ;stdio.h: 205: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 206: extern int printf(const char *, ...);
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: int rem;
[; ;stdlib.h: 29: int quot;
[; ;stdlib.h: 30: } div_t;
[; ;stdlib.h: 31: typedef struct {
[; ;stdlib.h: 32: unsigned rem;
[; ;stdlib.h: 33: unsigned quot;
[; ;stdlib.h: 34: } udiv_t;
[; ;stdlib.h: 35: typedef struct {
[; ;stdlib.h: 36: long quot;
[; ;stdlib.h: 37: long rem;
[; ;stdlib.h: 38: } ldiv_t;
[; ;stdlib.h: 39: typedef struct {
[; ;stdlib.h: 40: unsigned long quot;
[; ;stdlib.h: 41: unsigned long rem;
[; ;stdlib.h: 42: } uldiv_t;
[; ;stdlib.h: 65: extern double atof(const char *);
[; ;stdlib.h: 66: extern double strtod(const char *, const char **);
[; ;stdlib.h: 67: extern int atoi(const char *);
[; ;stdlib.h: 68: extern unsigned xtoi(const char *);
[; ;stdlib.h: 69: extern long atol(const char *);
[; ;stdlib.h: 70: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 72: extern int rand(void);
[; ;stdlib.h: 73: extern void srand(unsigned int);
[; ;stdlib.h: 74: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 75: extern div_t div(int numer, int denom);
[; ;stdlib.h: 76: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 77: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 78: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 79: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 80: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 81: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 82: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 87: extern void * malloc(size_t);
[; ;stdlib.h: 88: extern void free(void *);
[; ;stdlib.h: 89: extern void * realloc(void *, size_t);
[; ;stdlib.h: 91: extern void abort(void);
[; ;stdlib.h: 92: extern void exit(int);
[; ;stdlib.h: 93: extern int atexit(void (*)(void));
[; ;stdlib.h: 94: extern char * getenv(const char *);
[; ;stdlib.h: 95: extern char ** environ;
[; ;stdlib.h: 96: extern int system(char *);
[; ;stdlib.h: 97: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 98: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 99: extern int abs(int);
[; ;stdlib.h: 100: extern long labs(long);
[; ;stdlib.h: 103: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 104: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 109: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 110: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 112: extern char * ftoa(float f, int * status);
"15 delays.c
[v _Delayx `(v ~T0 @X0 1 ef1`i ]
{
[; ;delays.c: 15: void Delayx(int y){
[e :U _Delayx ]
[v _y `i ~T0 @X0 1 r1 ]
[f ]
"16
[v _x `i ~T0 @X0 1 a ]
[; ;delays.c: 16: int x=0;
[e = _x -> 0 `i ]
[; ;delays.c: 17: for (x=0; x<y; x=x+1) {
"17
{
[e = _x -> 0 `i ]
[e $U 10  ]
[e :U 7 ]
{
[; ;delays.c: 18: asm("nop ");
"18
[; <" nop  ;# ">
"19
}
"17
[e = _x + _x -> 1 `i ]
[e :U 10 ]
[e $ < _x _y 7  ]
[e :U 8 ]
"19
}
[; ;delays.c: 19: }
[; ;delays.c: 20: }
"20
[e :UE 6 ]
}
"22
[v _Delay10x `(v ~T0 @X0 1 ef1`i ]
{
[; ;delays.c: 22: void Delay10x(int y){
[e :U _Delay10x ]
[v _y `i ~T0 @X0 1 r1 ]
[f ]
"23
[v _x `i ~T0 @X0 1 a ]
[; ;delays.c: 23: int x=0;
[e = _x -> 0 `i ]
[; ;delays.c: 24: for (x=0; x<y; x=x+1) {
"24
{
[e = _x -> 0 `i ]
[e $U 15  ]
[e :U 12 ]
{
[; ;delays.c: 25: asm("nop ");
"25
[; <" nop  ;# ">
[; ;delays.c: 26: asm("nop ");
"26
[; <" nop  ;# ">
[; ;delays.c: 27: asm("nop ");
"27
[; <" nop  ;# ">
[; ;delays.c: 28: asm("nop ");
"28
[; <" nop  ;# ">
[; ;delays.c: 29: asm("nop ");
"29
[; <" nop  ;# ">
[; ;delays.c: 30: asm("nop ");
"30
[; <" nop  ;# ">
[; ;delays.c: 31: asm("nop ");
"31
[; <" nop  ;# ">
[; ;delays.c: 32: asm("nop ");
"32
[; <" nop  ;# ">
[; ;delays.c: 33: asm("nop ");
"33
[; <" nop  ;# ">
[; ;delays.c: 34: asm("nop ");
"34
[; <" nop  ;# ">
"35
}
"24
[e = _x + _x -> 1 `i ]
[e :U 15 ]
[e $ < _x _y 12  ]
[e :U 13 ]
"35
}
[; ;delays.c: 35: }
[; ;delays.c: 36: }
"36
[e :UE 11 ]
}
